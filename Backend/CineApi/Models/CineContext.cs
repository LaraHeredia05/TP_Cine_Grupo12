// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace CineApi.Models;

public partial class CineContext : DbContext
{
    public CineContext(DbContextOptions<CineContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Actore> Actores { get; set; }

    public virtual DbSet<Barrio> Barrios { get; set; }

    public virtual DbSet<Butaca> Butacas { get; set; }
   
    public virtual DbSet<ButacasFuncione> ButacasFunciones { get; set; }

    public virtual DbSet<Cliente> Clientes { get; set; }

    public virtual DbSet<Comprobante> Comprobantes { get; set; }

    public virtual DbSet<DetComprobante> DetComprobantes { get; set; }

    public virtual DbSet<Directore> Directores { get; set; }

    public virtual DbSet<FormasPago> FormasPagos { get; set; }

    public virtual DbSet<FormasVentum> FormasVenta { get; set; }

    public virtual DbSet<Funcione> Funciones { get; set; }

    public virtual DbSet<Genero> Generos { get; set; }

    public virtual DbSet<Localidade> Localidades { get; set; }

    public virtual DbSet<Pelicula> Peliculas { get; set; }

    public virtual DbSet<Premio> Premios { get; set; }

    public virtual DbSet<Promocione> Promociones { get; set; }

    public virtual DbSet<Provincia> Provincias { get; set; }

    public virtual DbSet<Sala> Salas { get; set; }

    public virtual DbSet<Sucursale> Sucursales { get; set; }

    public virtual DbSet<Ticket> Tickets { get; set; }

    public virtual DbSet<TiposSala> TiposSalas { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Actore>(entity =>
        {
            entity.HasKey(e => e.IdActor).HasName("PK__Actores__F86BE717BA787141");

            entity.Property(e => e.IdActor)
                .ValueGeneratedNever()
                .HasColumnName("id_actor");
            entity.Property(e => e.Apellido)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("apellido");
            entity.Property(e => e.Biografia)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("biografia");
            entity.Property(e => e.FechaNac)
                .HasColumnType("date")
                .HasColumnName("fecha_nac");
            entity.Property(e => e.Nacionalidad)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nacionalidad");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");

            entity.HasMany(d => d.IdPeliculas).WithMany(p => p.IdActors)
                .UsingEntity<Dictionary<string, object>>(
                    "PeliculasActore",
                    r => r.HasOne<Pelicula>().WithMany()
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Peliculas__id_pe__6754599E"),
                    l => l.HasOne<Actore>().WithMany()
                        .HasForeignKey("IdActor")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Peliculas__id_pe__66603565"),
                    j =>
                    {
                        j.HasKey("IdActor", "IdPelicula").HasName("PK__Pelicula__333BF0E3E38C72D8");
                        j.ToTable("Peliculas_actores");
                        j.IndexerProperty<int>("IdActor").HasColumnName("id_actor");
                        j.IndexerProperty<int>("IdPelicula").HasColumnName("id_pelicula");
                    });
        });

        modelBuilder.Entity<Barrio>(entity =>
        {
            entity.HasKey(e => e.IdBarrio).HasName("pk_id_barrio");

            entity.Property(e => e.IdBarrio)
                .ValueGeneratedNever()
                .HasColumnName("id_barrio");
            entity.Property(e => e.IdLocalidad).HasColumnName("id_localidad");
            entity.Property(e => e.NombreBarrio)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nombre_barrio");

            entity.HasOne(d => d.IdLocalidadNavigation).WithMany(p => p.Barrios)
                .HasForeignKey(d => d.IdLocalidad)
                .HasConstraintName("fk_id_localidad");
        });

        modelBuilder.Entity<Butaca>(entity =>
        {
            entity.HasKey(e => e.IdButaca).HasName("PK__Butacas__EB757993017603B2");

            entity.Property(e => e.IdButaca)
                .ValueGeneratedNever()
                .HasColumnName("id_butaca");
            entity.Property(e => e.Fila)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("fila");
            entity.Property(e => e.IdSala).HasColumnName("id_sala");
            entity.Property(e => e.Numero).HasColumnName("numero");

            entity.HasOne(d => d.IdSalaNavigation).WithMany(p => p.Butacas)
                .HasForeignKey(d => d.IdSala)
                .HasConstraintName("FK__Butacas__id_sala__787EE5A0");
        });

        modelBuilder.Entity<ButacasFuncione>(entity =>
        {
            entity.HasKey(e => new { e.IdButaca, e.IdFuncion }).HasName("PK__Butacas___64189F6F4D9F403E");

            entity.ToTable("Butacas_funciones");

            entity.Property(e => e.IdButaca).HasColumnName("id_butaca");
            entity.Property(e => e.IdFuncion).HasColumnName("id_funcion");
            entity.Property(e => e.Estado)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("estado");

            entity.HasOne(d => d.IdButacaNavigation).WithMany(p => p.ButacasFunciones)
                .HasForeignKey(d => d.IdButaca)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Butacas_f__id_bu__151B244E");

            entity.HasOne(d => d.IdFuncionNavigation).WithMany(p => p.ButacasFunciones)
                .HasForeignKey(d => d.IdFuncion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Butacas_f__id_fu__160F4887");
        });

        modelBuilder.Entity<Cliente>(entity =>
        {
            entity.HasKey(e => e.IdCliente).HasName("PK__Clientes__677F38F5934BE832");

            entity.HasIndex(e => e.Email, "UQ__Clientes__AB6E61644CB70809").IsUnique();

            entity.Property(e => e.IdCliente)
                .ValueGeneratedNever()
                .HasColumnName("id_cliente");
            entity.Property(e => e.ApellidoCliente)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("apellido_cliente");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.NombreCliente)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre_cliente");
            entity.Property(e => e.Telefono)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("telefono");
        });

        modelBuilder.Entity<Comprobante>(entity =>
        {
            entity.HasKey(e => e.IdComprobante).HasName("PK__Comproba__55E5E240338E819D");

            entity.Property(e => e.IdComprobante).HasColumnName("id_comprobante");
            entity.Property(e => e.Fecha)
                .HasColumnType("date")
                .HasColumnName("fecha");
            entity.Property(e => e.IdCliente).HasColumnName("id_cliente");
            entity.Property(e => e.IdFormaPago).HasColumnName("id_forma_pago");
            entity.Property(e => e.IdFormaVenta).HasColumnName("id_forma_venta");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");

            entity.HasOne(d => d.IdClienteNavigation).WithMany(p => p.Comprobantes)
                .HasForeignKey(d => d.IdCliente)
                .HasConstraintName("FK__Comproban__id_cl__07C12930");

            entity.HasOne(d => d.IdFormaPagoNavigation).WithMany(p => p.Comprobantes)
                .HasForeignKey(d => d.IdFormaPago)
                .HasConstraintName("FK__Comproban__id_fo__08B54D69");

            entity.HasOne(d => d.IdFormaVentaNavigation).WithMany(p => p.Comprobantes)
                .HasForeignKey(d => d.IdFormaVenta)
                .HasConstraintName("FK__Comproban__id_fo__09A971A2");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.Comprobantes)
                .HasForeignKey(d => d.IdSucursal)
                .HasConstraintName("FK__Comproban__id_su__0A9D95DB");
        });

        modelBuilder.Entity<DetComprobante>(entity =>
        {
            entity.HasKey(e => e.IdDetComprobante).HasName("PK__Det_Comp__FC2F366832FE315F");

            entity.ToTable("Det_Comprobante");

            entity.Property(e => e.IdDetComprobante).HasColumnName("id_det_comprobante");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.Descuento)
                .HasColumnType("decimal(5, 2)")
                .HasColumnName("descuento");
            entity.Property(e => e.IdComprobante).HasColumnName("id_comprobante");
            entity.Property(e => e.IdFuncion).HasColumnName("id_funcion");
            entity.Property(e => e.Precio)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("precio");

            entity.HasOne(d => d.IdComprobanteNavigation).WithMany(p => p.DetComprobantes)
                .HasForeignKey(d => d.IdComprobante)
                .HasConstraintName("FK__Det_Compr__id_co__0D7A0286");

            entity.HasOne(d => d.IdFuncionNavigation).WithMany(p => p.DetComprobantes)
                .HasForeignKey(d => d.IdFuncion)
                .HasConstraintName("FK__Det_Compr__id_fu__0E6E26BF");
        });

        modelBuilder.Entity<Directore>(entity =>
        {
            entity.HasKey(e => e.IdDirector).HasName("PK__Director__6B65E2A2A055A2CA");

            entity.Property(e => e.IdDirector)
                .ValueGeneratedNever()
                .HasColumnName("id_director");
            entity.Property(e => e.Apellido)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("apellido");
            entity.Property(e => e.Biografia)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("biografia");
            entity.Property(e => e.FechaNac)
                .HasColumnType("date")
                .HasColumnName("fecha_nac");
            entity.Property(e => e.Nacionalidad)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nacionalidad");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<FormasPago>(entity =>
        {
            entity.HasKey(e => e.IdFormaPago).HasName("PK__Formas_P__DA9B39EEEDBBC8A0");

            entity.ToTable("Formas_Pago");

            entity.Property(e => e.IdFormaPago)
                .ValueGeneratedNever()
                .HasColumnName("id_forma_pago");
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("descripcion");
        });

        modelBuilder.Entity<FormasVentum>(entity =>
        {
            entity.HasKey(e => e.IdFormaVenta).HasName("PK__Formas_V__FD82D6219F25B69E");

            entity.ToTable("Formas_Venta");

            entity.Property(e => e.IdFormaVenta)
                .ValueGeneratedNever()
                .HasColumnName("id_forma_venta");
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("descripcion");
        });

        modelBuilder.Entity<Funcione>(entity =>
        {
            entity.HasKey(e => e.IdFuncion).HasName("PK__Funcione__F6DE6FC949643C1B");

            entity.Property(e => e.IdFuncion).HasColumnName("id_funcion");
            entity.Property(e => e.Dia)
                .HasColumnType("date")
                .HasColumnName("dia");
            entity.Property(e => e.Horario).HasColumnName("horario");
            entity.Property(e => e.IdPelicula).HasColumnName("id_pelicula");
            entity.Property(e => e.IdSala).HasColumnName("id_sala");
            entity.Property(e => e.Idioma)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("idioma");
            entity.Property(e => e.TipoFuncion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("tipo_funcion");

            entity.HasOne(d => d.IdPeliculaNavigation).WithMany(p => p.Funciones)
                .HasForeignKey(d => d.IdPelicula)
                .HasConstraintName("FK__Funciones__id_pe__03F0984C");

            entity.HasOne(d => d.IdSalaNavigation).WithMany(p => p.Funciones)
                .HasForeignKey(d => d.IdSala)
                .HasConstraintName("FK__Funciones__id_sa__04E4BC85");
        });

        modelBuilder.Entity<Genero>(entity =>
        {
            entity.HasKey(e => e.IdGenero).HasName("PK__Generos__99A8E4F950C95EB0");

            entity.Property(e => e.IdGenero)
                .ValueGeneratedNever()
                .HasColumnName("id_genero");
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("descripcion");
        });

        modelBuilder.Entity<Localidade>(entity =>
        {
            entity.HasKey(e => e.IdLocalidad).HasName("pk_id_localidad");

            entity.Property(e => e.IdLocalidad)
                .ValueGeneratedNever()
                .HasColumnName("id_localidad");
            entity.Property(e => e.IdProvincia).HasColumnName("id_provincia");
            entity.Property(e => e.NombreLocalidad)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nombre_localidad");

            entity.HasOne(d => d.IdProvinciaNavigation).WithMany(p => p.Localidades)
                .HasForeignKey(d => d.IdProvincia)
                .HasConstraintName("fk_id_provincia");
        });

        modelBuilder.Entity<Pelicula>(entity =>
        {
            entity.HasKey(e => e.IdPelicula).HasName("PK__Pelicula__B5017F4D3439AD6C");

            entity.Property(e => e.IdPelicula).HasColumnName("id_pelicula");
            entity.Property(e => e.AnioLanzamiento).HasColumnName("anio_lanzamiento");
            entity.Property(e => e.Clasificacion)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("clasificacion");
            entity.Property(e => e.Duracion).HasColumnName("duracion");
            entity.Property(e => e.FechaEstreno)
                .HasColumnType("date")
                .HasColumnName("fecha_estreno");
            entity.Property(e => e.IdDirector).HasColumnName("id_director");
            entity.Property(e => e.IdGenero).HasColumnName("id_genero");
            entity.Property(e => e.Titulo)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("titulo");

            entity.HasOne(d => d.IdDirectorNavigation).WithMany(p => p.Peliculas)
                .HasForeignKey(d => d.IdDirector)
                .HasConstraintName("FK__Peliculas__id_di__5FB337D6");

            entity.HasOne(d => d.IdGeneroNavigation).WithMany(p => p.Peliculas)
                .HasForeignKey(d => d.IdGenero)
                .HasConstraintName("FK__Peliculas__id_ge__5EBF139D");
        });

        modelBuilder.Entity<Premio>(entity =>
        {
            entity.HasKey(e => e.IdPremio).HasName("PK__Premios__A98947456532F01E");

            entity.Property(e => e.IdPremio)
                .ValueGeneratedNever()
                .HasColumnName("id_premio");
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("descripcion");

            entity.HasMany(d => d.IdActors).WithMany(p => p.IdPremios)
                .UsingEntity<Dictionary<string, object>>(
                    "ActoresPremio",
                    r => r.HasOne<Actore>().WithMany()
                        .HasForeignKey("IdActor")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Actores_p__id_ac__5812160E"),
                    l => l.HasOne<Premio>().WithMany()
                        .HasForeignKey("IdPremio")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Actores_p__id_ac__571DF1D5"),
                    j =>
                    {
                        j.HasKey("IdPremio", "IdActor").HasName("PK__Actores___C60FF9343DEE4F7A");
                        j.ToTable("Actores_premios");
                        j.IndexerProperty<int>("IdPremio").HasColumnName("id_premio");
                        j.IndexerProperty<int>("IdActor").HasColumnName("id_actor");
                    });

            entity.HasMany(d => d.IdDirectors).WithMany(p => p.IdPremios)
                .UsingEntity<Dictionary<string, object>>(
                    "DirectoresPremio",
                    r => r.HasOne<Directore>().WithMany()
                        .HasForeignKey("IdDirector")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Directore__id_di__5BE2A6F2"),
                    l => l.HasOne<Premio>().WithMany()
                        .HasForeignKey("IdPremio")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Directore__id_di__5AEE82B9"),
                    j =>
                    {
                        j.HasKey("IdPremio", "IdDirector").HasName("PK__Director__9F3F196F7E3F6A61");
                        j.ToTable("Directores_premios");
                        j.IndexerProperty<int>("IdPremio").HasColumnName("id_premio");
                        j.IndexerProperty<int>("IdDirector").HasColumnName("id_director");
                    });

            entity.HasMany(d => d.IdPeliculas).WithMany(p => p.IdPremios)
                .UsingEntity<Dictionary<string, object>>(
                    "PeliculasPremio",
                    r => r.HasOne<Pelicula>().WithMany()
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Peliculas__id_pe__6383C8BA"),
                    l => l.HasOne<Premio>().WithMany()
                        .HasForeignKey("IdPremio")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Peliculas__id_pe__628FA481"),
                    j =>
                    {
                        j.HasKey("IdPremio", "IdPelicula").HasName("PK__Pelicula__62D950B1F9BF4DB7");
                        j.ToTable("Peliculas_premios");
                        j.IndexerProperty<int>("IdPremio").HasColumnName("id_premio");
                        j.IndexerProperty<int>("IdPelicula").HasColumnName("id_pelicula");
                    });
        });

        modelBuilder.Entity<Promocione>(entity =>
        {
            entity.HasKey(e => e.IdPromocion).HasName("PK__Promocio__F89308E0DDF1B3CE");

            entity.Property(e => e.IdPromocion)
                .ValueGeneratedNever()
                .HasColumnName("id_promocion");
            entity.Property(e => e.Descuento)
                .HasColumnType("decimal(5, 2)")
                .HasColumnName("descuento");
            entity.Property(e => e.Dia)
                .HasColumnType("date")
                .HasColumnName("dia");
            entity.Property(e => e.HorarioFinalizacion).HasColumnName("horario_finalizacion");
            entity.Property(e => e.HorarioInicio).HasColumnName("horario_inicio");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");

            entity.HasMany(d => d.IdSucursals).WithMany(p => p.IdPromocions)
                .UsingEntity<Dictionary<string, object>>(
                    "PromocionesSucursale",
                    r => r.HasOne<Sucursale>().WithMany()
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Promocion__id_su__01142BA1"),
                    l => l.HasOne<Promocione>().WithMany()
                        .HasForeignKey("IdPromocion")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Promocion__id_su__00200768"),
                    j =>
                    {
                        j.HasKey("IdPromocion", "IdSucursal").HasName("PK__Promocio__DC5450E1312F2784");
                        j.ToTable("Promociones_sucursales");
                        j.IndexerProperty<int>("IdPromocion").HasColumnName("id_promocion");
                        j.IndexerProperty<int>("IdSucursal").HasColumnName("id_sucursal");
                    });
        });

        modelBuilder.Entity<Provincia>(entity =>
        {
            entity.HasKey(e => e.IdProvincia).HasName("pk_id_provincia");

            entity.Property(e => e.IdProvincia)
                .ValueGeneratedNever()
                .HasColumnName("id_provincia");
            entity.Property(e => e.NombreProvincia)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nombre_provincia");
        });

        modelBuilder.Entity<Sala>(entity =>
        {
            entity.HasKey(e => e.IdSala).HasName("PK__Salas__D18B015B65F9BB96");

            entity.Property(e => e.IdSala)
                .ValueGeneratedNever()
                .HasColumnName("id_sala");
            entity.Property(e => e.Capacidad).HasColumnName("capacidad");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTipoSala).HasColumnName("id_tipo_sala");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.Salas)
                .HasForeignKey(d => d.IdSucursal)
                .HasConstraintName("FK__Salas__id_sucurs__75A278F5");

            entity.HasOne(d => d.IdTipoSalaNavigation).WithMany(p => p.Salas)
                .HasForeignKey(d => d.IdTipoSala)
                .HasConstraintName("FK__Salas__id_tipo_s__74AE54BC");
        });

        modelBuilder.Entity<Sucursale>(entity =>
        {
            entity.HasKey(e => e.IdSucursal).HasName("PK__Sucursal__4C758013B2F05E2D");

            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.Direccion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("direccion");
            entity.Property(e => e.IdBarrio).HasColumnName("id_barrio");
            entity.Property(e => e.NombreSucursal)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre_sucursal");
            entity.Property(e => e.Telefono)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("telefono");

            entity.HasOne(d => d.IdBarrioNavigation).WithMany(p => p.Sucursales)
                .HasForeignKey(d => d.IdBarrio)
                .HasConstraintName("fk_id_barrio");
        });

        modelBuilder.Entity<Ticket>(entity =>
        {
            entity.HasKey(e => e.IdTicket).HasName("PK__Tickets__48C6F5232FAE8579");

            entity.Property(e => e.IdTicket)
                .ValueGeneratedNever()
                .HasColumnName("id_ticket");
            entity.Property(e => e.IdButaca).HasColumnName("id_butaca");
            entity.Property(e => e.IdDetComprobante).HasColumnName("id_det_comprobante");

            entity.HasOne(d => d.IdButacaNavigation).WithMany(p => p.Tickets)
                .HasForeignKey(d => d.IdButaca)
                .HasConstraintName("FK__Tickets__id_buta__123EB7A3");

            entity.HasOne(d => d.IdDetComprobanteNavigation).WithMany(p => p.Tickets)
                .HasForeignKey(d => d.IdDetComprobante)
                .HasConstraintName("FK__Tickets__id_det___114A936A");
        });

        modelBuilder.Entity<TiposSala>(entity =>
        {
            entity.HasKey(e => e.IdTipoSala).HasName("PK__Tipos_sa__1C51F013724C52C5");

            entity.ToTable("Tipos_salas");

            entity.Property(e => e.IdTipoSala)
                .ValueGeneratedNever()
                .HasColumnName("id_tipo_sala");
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("descripcion");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}